{
  "name": "CodeQuery",
  "tagline": "A code-understanding, code-browsing or code-search tool. This is a tool to index, then query or search C, C++, Java, Python, Ruby and Go source code. It builds upon the databases of cscope and ctags, and provides a nice GUI tool.",
  "body": "![CodeQuery](doc/logotitle.png)\r\n===============================\r\n\r\nThis is a tool to index, then query or search C, C++, Java, Python, Ruby, Go and Javascript source code.\r\n\r\nIt builds upon the databases of [cscope](http://cscope.sourceforge.net/) and [Exuberant ctags](http://ctags.sourceforge.net/).\r\n\r\nThe databases of *cscope* and *ctags* would be processed by the *cqmakedb* tool to generate the CodeQuery database file.\r\n\r\nThe CodeQuery database file can be viewed and queried using the *codequery* GUI tool.\r\n\r\n[![Build Status](https://api.travis-ci.org/ruben2020/codequery.svg)](https://travis-ci.org/ruben2020/codequery)     [![Coverity Status](https://scan.coverity.com/projects/10066/badge.svg)](https://scan.coverity.com/projects/ruben2020-codequery)\r\n      \r\n\r\n## Latest version = 0.17.0\r\n\r\nWindows and Linux binaries available here for download: [CodeQuery@sourceforge downloads](https://sourceforge.net/projects/codequery/files/)\r\n\r\nTo build on Linux, please read the [INSTALL-LINUX](doc/INSTALL-LINUX.md) file.\r\n\r\nOn Mac, the software can be installed through [Brew](http://brew.sh/) using `brew install codequery`.\r\n\r\nPlease read [NEWS](NEWS.txt) to find out more.\r\n\r\n\r\n## How is it different from cscope and ctags? What are the advantages?\r\n\r\nBoth cscope and ctags can do symbol lookup and identify functions, macros, classes and structs.\r\n\r\ncscope is very C-centric, but is fuzzy enough to cover C++ and Java, but not very well for e.g. it doesn't understand destructors and class member instantiations. It can't provide relationships of class inheritance and membership. cscope can do \"functions that call this function\" and \"functions called by this function\". This is a very powerful feature that makes cscope stand out among comparable tools.\r\n\r\nctags does many languages well and understands destructors, member instantiations, and the relationships of class membership and inheritance. From ctags, we can find out \"members and methods of this class\", \"class which owns this member or method\", \"parent of this class\", \"child of this class\" etc. However, it doesn't do \"functions that call this function\" or \"functions called by this function\".\r\n\r\nSo both these tools have their pros and cons, but complement each other.\r\n\r\nCodeQuery is a project that attempts to combine the features available from both cscope and ctags, provide faster database access compared to cscope (because it uses sqlite) and provides a nice GUI tool as well. Due to this faster database access, fast auto-completion of search terms and multiple complex queries to perform visualization is possible.\r\n\r\nIn addition, [pycscope](https://github.com/portante/pycscope) is used to add support for Python, in place of cscope.\r\n\r\nIn addition, [starscope](https://github.com/eapache/starscope) is used to add support for Ruby, Go and Javascript, in place of cscope.\r\n\r\n\r\n## What features does CodeQuery have?\r\n\r\n* Combines the best of both cscope and ctags\r\n* Faster due to the use of sqlite for the CodeQuery database\r\n* Cross-platform GUI tool\r\n* Fast auto-completion of search term\r\n* Case-insensitive, partial keyword search - wildcard search supported * and ?\r\n* Exact match search\r\n* Filter search results by file path\r\n* File viewer with syntax highlighting\r\n* Ability to open viewed file in an external editor or IDE\r\n* Visualization of function call graph and class inheritance based on search term\r\n* Visualization graphs can be saved to PNG or Graphviz DOT files\r\n\r\n\r\n## What types of query can I make?\r\n\r\n* Symbol\r\n* Function or macro definition\r\n* Class or struct\r\n* Functions calling this function\r\n* Functions called by this function\r\n* Calls of this function or macro\r\n* Class which owns this member or method\r\n* Members and methods of this class\r\n* Parent of this class (inheritance)\r\n* Children of this class (inheritance)\r\n* Files including this file\r\n* Full path for file\r\n* Functions and macros inside this file\r\n* Grep\r\n\r\n\r\n## What does it look like?\r\n\r\n![CodeQuery screenshot](doc/screenshot.png)\r\n\r\n\r\n## How does the visualization look like?\r\n\r\nHere's a function call graph based on the search term of \"updateFilePathLabel\". A -> B means A calls B:    \r\n![Visualization screenshot](doc/screenshot2.png)\r\n\r\n\r\n## Are other editors like vim or emacs supported?\r\n\r\nYes! There is a vim plugin for CodeQuery called [vim-codequery](https://github.com/devjoe/vim-codequery) by [devjoe](https://github.com/devjoe). We welcome contributors to develop plugins for other editors too.\r\n\r\n\r\n## What does it cost? How is it licensed?\r\n\r\nIt's freeware and free open source software.\r\n\r\nThis software is licensed under the [GNU GPL v3](http://www.gnu.org/licenses/gpl.html). See [LICENSE.md](LICENSE.md) or [LICENSE.txt](windows-install/LICENSE.txt).\r\n\r\nFiles under the `querylib` directory are licensed under the [MIT license](http://opensource.org/licenses/MIT). See [QueryLib README](querylib/README.txt). This is a library to query CodeQuery database files. This library is MIT-licensed, so that it may be used to create plugins for editors, IDEs and other software without license restrictions. It's only dependency is on sqlite3.\r\n\r\n\r\n## Can I use it in a commercial environment without purchasing, for an unlimited time?\r\n\r\nYes. However, donations are welcomed.\r\n\r\n\r\n## Which platforms are supported?\r\n\r\nIt has been tested on Windows 7 64-bit, Windows XP 32-bit, Mac OS X, Ubuntu and Fedora Linux 64-bit and, Ubuntu and Fedora Linux 32-bit.\r\n\r\nContributions are welcomed to attempt ports to other operating systems.\r\n\r\n\r\n## Is the software available in other languages?\r\n\r\nYes. This applies only to the GUI tool.\r\n\r\nContributions are welcomed to update or provide new translations.\r\n\r\n\r\n## How to install it?\r\n\r\nOn Windows, EXE setup packages will be provided here: [CodeQuery@sourceforge downloads](https://sourceforge.net/projects/codequery/files/). The EXE setup package shall also contain cscope.exe, ctags.exe and the required DLLs. So, everything you need is in one package. However, [pycscope](https://github.com/portante/pycscope) (optional - only for Python) and [starscope](https://github.com/eapache/starscope) (optional - only for Ruby, Go and Javascript) are not bundled together with this setup package and need to be installed separately.\r\n\r\nOn Linux, tar.gz, RPM and Debian package installations will be provided here: [CodeQuery@sourceforge downloads](https://sourceforge.net/projects/codequery/files/).\r\n\r\nOn Mac, the software can be installed through [Brew](http://brew.sh/) using `brew install codequery`.\r\n\r\nTo build on Linux and Mac, please read the [INSTALL-LINUX](doc/INSTALL-LINUX.md) file.\r\n\r\nVersion 15.8a of [cscope](http://cscope.sourceforge.net/) or higher, works best with CodeQuery.\r\n\r\n\r\n## How do I use it?\r\n\r\nOn Windows: [HOWTO-WINDOWS](windows-install/HOWTO-WINDOWS.txt). This file is included in the EXE setup package.\r\n\r\nOn Linux and Mac: [HOWTO-LINUX](doc/HOWTO-LINUX.md)\r\n\r\nPlease read the HOWTO file provided for each platform. The workflow looks like this:\r\n![CodeQuery workflow](doc/workflow.png)\r\n\r\n\r\n## How do I generate whole-program call graphs or UML class diagrams?\r\n\r\nCodeQuery cannot do this at the moment.\r\n\r\nTo generate whole-program call graphs, please use [GNU cflow](https://www.gnu.org/software/cflow/) or [CodeViz](https://github.com/petersenna/codeviz) for C and C++. For Java, there is [Javashot](http://code.google.com/p/javashot/). \r\n\r\nTo generate whole-program UML class diagrams for various object-oriented languages, please use [tags2uml](https://github.com/ruben2020/tags2uml). \r\n\r\n\r\n## Are there any known limitations?\r\n\r\nFor C and C++, [inline assembly code](http://en.wikipedia.org/wiki/Inline_assembler) is not supported by all the tools. This mainly affects embedded software, OS and driver code.\r\n\r\nPlease exclude files with inline assembly code from the list of files (cscope.files) to be scanned.\r\n\r\n\r\n## How do I contact the authors for support, issues, bug reports, fix patches, feature requests etc.?\r\n\r\nPlease see the email address below, and also the Issues tab in GitHub.\r\n\r\nEmail address:    \r\n![Contact address](doc/emailaddr.png)\r\n\r\nWebsite: [CodeQuery website](https://github.com/ruben2020/codequery)\r\n\r\n\r\n## How can I contribute?\r\n\r\n* Report bugs\r\n* Provide feedback, new ideas, suggestions etc. What would you like to see?\r\n* Tell your friends, propose it on StackOverflow, write about it, tweet it\r\n* Fix bugs (see Issues tab)\r\n* Update translations (Deutsch, Francais, Japanese etc.)\r\n* Port to other platforms\r\n* Write plugins for emacs, eclipse, Notepad++ etc.\r\n* Write a web-based interface to CodeQuery's database\r\n* Add support for other languages e.g. Javascript\r\n\r\n\r\n## List of Contributors\r\n\r\n[ruben2020](https://github.com/ruben2020)    \r\n[naseer](https://github.com/naseer)    \r\n[bruno-](https://github.com/bruno-)    \r\n[devjoe](https://github.com/devjoe)    \r\n[jonashaag](https://github.com/jonashaag)    \r\n[ilovezfs](https://github.com/ilovezfs)    \r\n[JCount](https://github.com/JCount)    \r\n(More welcomed)\r\n\r\n\r\n## Credits\r\n\r\nWe thank the people behind the following projects:    \r\n[cscope](http://cscope.sourceforge.net/) - our database is derived from this   \r\n[Exuberant ctags](http://ctags.sourceforge.net/)- our database is derived from this   \r\n[pycscope](https://github.com/portante/pycscope) - our database (for Python) is derived from this    \r\n[starscope](https://github.com/eapache/starscope) - our database (for Ruby, Go and Javascript) is derived from this    \r\n[sqlite3](http://www.sqlite.org/) - our database is using this format    \r\n[CMake](http://www.cmake.org/) - cross-platform build toolchain for CodeQuery    \r\n[Qt open source](http://qt-project.org/) - GUI toolkit used to build CodeQuery    \r\n[optlist](http://michael.dipperstein.com/optlist/index.html) - cqmakedb uses this to parse command line options   \r\n[showgraph](http://code.google.com/p/showgraph/) - visualization done using this library    \r\n[scintilla](http://www.scintilla.org/) - our code editing widget (in the form of QScintilla)    \r\n[vim-codequery](https://github.com/devjoe/vim-codequery) - vim plugin for CodeQuery    \r\n[Axialis](http://www.axialis.com/iconworkshop) - free images for CodeQuery and this website    \r\n[brew](http://brew.sh/) - binaries for Mac here    \r\n\r\n\r\n",
  "google": "UA-48551413-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}