language: cpp

compiler: gcc

dist: trusty

sudo: require

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "ev1xh15/xbYiElXyiC5yEwPiP99Vp9jO7zNjk9AVrH76MZNlHOp90bdDYF7zkgRMKBWORcQubTF8h9iM1EFYXwxWVapuKrFlISQKHuErOo+hjKFzMvJcdYhBd2BZCbkQmowv1U860QlZGx+oW6hhG1sJmWfzm/AANQuc6/+qozI="

before_install:
 - uname -a
 - sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" install -qq qdbus qmlscene qt5-default qt5-qmake qtbase5-dev-tools qtchooser qtdeclarative5-dev xbitmaps xterm libqt5svg5-dev qttools5-dev qtscript5-dev qtdeclarative5-folderlistmodel-plugin qtdeclarative5-controls-plugin qttools5-dev-tools
 - sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" install -qq sqlite3 libsqlite3-dev cscope exuberant-ctags rpm libqt5scintilla2-dev qt4-dev-tools libqscintilla2-dev clang

script: 
  - sudo ln -s /usr/bin/gcc-4.8 /usr/local/bin/gcc
  - sudo ln -s /usr/bin/g++-4.8 /usr/local/bin/g++
  - gcc -v && g++ -v && clang -v && cmake --version
  - mkdir -p build
  - cd build
  - rm -rf *
  - cmake -G "Unix Makefiles" ..
  - make package
  - sudo make install
  - cqmakedb -v
  - cd ..
  - cscope -cbR
  - ctags --fields=+i -nR
  - cqmakedb -s cq.db -c cscope.out -t tags -p -d
  - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u
  - cd build
  - rm -rf *
  - cmake -G "Unix Makefiles" -DBUILD_QT5=ON ..
  - make package
  - sudo make install
  - cqmakedb -v
  - cd ..
  - rm cscope.out
  - rm tags
  - rm cq.db
  - cscope -cbR
  - ctags --fields=+i -nR
  - cqmakedb -s cq.db -c cscope.out -t tags -p -d
  - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u
  - cd build
  - rm -rf *
  - export CC=clang
  - export CXX=clang++
  - cmake -G "Unix Makefiles" -DBUILD_QT5=ON ..
  - make package
  - sudo make install
  - cqmakedb -v
  - cd ..
  - rm cscope.out
  - rm tags
  - rm cq.db
  - cscope -cbR
  - ctags --fields=+i -nR
  - cqmakedb -s cq.db -c cscope.out -t tags -p -d
  - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.8
      - g++-4.8
      - cmake
  coverity_scan:
    project:
      name: "ruben2020/codequery"
      description: "Build submitted via Travis CI"
    notification_email: ruben2020-git@users.sourceforge.net
    build_command_prepend: "mkdir -p build; cd build; rm -rf *; cmake -DBUILD_QT5=ON .."
    build_command:   "make" 
    branch_pattern: coverity_scan

notifications:
  email:
    - ruben2020-git@users.sourceforge.net
  on_success: change
  on_failure: always
